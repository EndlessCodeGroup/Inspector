import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

// Root project build config

buildscript {
    ext.kotlinVersion = '1.3.11'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"

        constraints {
            classpath("org.apache.httpcomponents:httpclient:4.5.2") {
                because("it's needed for gradle-download-task plugin")
            }
        }
    }
}

plugins {
    id("base")
    id("com.github.ben-manes.versions") version "0.20.0"
}

description = "Catch and report all exceptions"

allprojects {
    ext.pluginName = "Inspector"
    ext.apiProject = project(":inspector-api")
}

apply(from: rootProject.file("gradle/bintray.gradle.kts"))

// Common configurations for all subprojects
subprojects {
    apply(plugin: "kotlin")
    apply(from: rootProject.file("gradle/common.gradle"))
    
    version = "0.8.0"

    tasks.withType(KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
            apiVersion = "1.3"
            languageVersion = "1.3"
            freeCompilerArgs = ["-Xenable-jvm-default"]
        }
    }
}

// Configuration for API implementations
configure(subprojects - apiProject) {

    // Finish configuring API first
    evaluationDependsOn(apiProject.path)

    // Use api as dependency
    dependencies {
        // Can't use api configuration because of https://youtrack.jetbrains.com/issue/KT-28355
        compile(apiProject)
    }
}
