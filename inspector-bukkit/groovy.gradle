def repoUrl = "https://gitlab.com/endlesscodegroup/inspector"

bukkit {
    version = "1.13"

    meta {
        name = pluginName
        main = "$group.${project.name}.${pluginName}Plugin"
        authors = ["OsipXD", "EndlessCodeGroup"]
        url = repoUrl
    }

    run {
        core = "spigot"
        eula = true
    }
}

repositories {
    dmulloy2()
}

dependencies {
    compileOnly(bukkit()) {
        exclude group: "junit"
    }
}

shadowJar {
    relocate("kotlin", "ru.endlesscode.inspector.shade.kotlin")
    relocate("com.github.kittinunf", "ru.endlesscode.inspector.shade.com.github.kittinunf")
    relocate("org.json", "ru.endlesscode.inspector.shade.org.json")
    relocate("org.intellij", "ru.endlesscode.inspector.shade.org.intellij")
    relocate("org.jetbrains", "ru.endlesscode.inspector.shade.org.jetbrains")
}
jar.finalizedBy(shadowJar)

def proguardDir = new File(project.buildDir, "libs")
ext.minifiedJar = new File(proguardDir, "$pluginName-$version-all-min.jar")

apply(from: rootProject.file("gradle/publish.gradle"))

publishing {
    publications {
        bukkit(MavenPublication) {
            artifactId "$project.name"

            from components.java
            artifact sourcesJar
            artifact shadowJar

            pom.withXml {
                def root = asNode()
                root.appendNode("name", "Inspector (Bukkit)")
                root.appendNode("description", "Bukkit implementation of Inspector API")
                root.children().last() + pomConfig

                // Remove not needed dependencies
                def artifactsToFilter = ["kotlin-stdlib-jdk8", "kotlinx-coroutines-core"]
                root.dependencies.'*'.findAll() {
                    it.artifactId.text() in artifactsToFilter
                }.each() {
                    it.parent().remove(it)
                }
            }
        }
        bukkitRuntime(MavenPublication) {
            artifactId "$project.name-runtime"

            artifact minifiedJar

            pom.withXml {
                def root = asNode()
                root.appendNode("name", "Inspector Runtime (Bukkit)")
                root.appendNode("description", "Bukkit implementation of Inspector API (embeddable)")
                root.children().last() + pomConfig
            }
        }
    }
}
