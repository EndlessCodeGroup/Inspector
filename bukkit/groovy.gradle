def repoUrl = "https://gitlab.com/endlesscodegroup/inspector"

bukkit {
    version = "1.12.2"

    meta {
        name = pluginName
        main = "$group.${project.name}.$pluginName"
        authors = ["OsipXD", "EndlessCodeGroup"]
        url = repoUrl
    }

    run {
        core = "paper"
        eula = true
    }
}

dependencies {
    compileOnly(bukkit())
    applyDeps(bukkitDeps) { compileOnly(it) }
}

shadowJar {
    relocate("kotlin", "ru.endlesscode.inspector.shade.kotlin")
    relocate("khttp", "ru.endlesscode.inspector.shade.khttp")
    relocate("org.json", "ru.endlesscode.inspector.shade.org.json")
    relocate("org.intellij", "ru.endlesscode.inspector.shade.org.intellij")
    relocate("org.jetbrains", "ru.endlesscode.inspector.shade.org.jetbrains")
}

assemble.dependsOn shadowJar

publishing {
    publications {
        bukkit(MavenPublication) {
            artifactId "$rootProject.name-$name"

            from components.java
            artifact sourcesJar

            pom.withXml {
                def root = asNode()
                root.appendNode("name", "Inspector (Bukkit)")
                root.appendNode("description", "Bukkit implementation of Inspector API")
                root.children().last() + pomConfig

                // Remove not needed dependencies
                def artifactsToFilter = ["kotlin-stdlib-jdk8", "kotlinx-coroutines-core"]
                root.dependencies.'*'.findAll() {
                    it.artifactId.text() in artifactsToFilter
                }.each() {
                    it.parent().remove(it)
                }
            }
        }
    }
}
